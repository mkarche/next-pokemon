import type { GetServerSideProps, GetStaticProps, NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import { useQuery } from "@tanstack/react-query";
import { json } from "stream/consumers";
import Image from "next/image";
import Link from "next/link";
import { Input, Link as ChakraLink, Text, VStack } from "@chakra-ui/react";
import { Image as ChakraImage } from "@chakra-ui/react";
import { getPokemon, PokemonOverview } from "../utils/getPokemon";
import { pokemonBaseUrl } from "../config/config";
import { ChangeEvent, ChangeEventHandler, useState } from "react";

interface Props {
	data?: PokemonOverview[];
}

const Home: NextPage = ({ data }: Props) => {
	const [filter, setFilter] = useState<string>("");

	const handleFilter = (e: ChangeEvent<HTMLInputElement>) => {
		setFilter(e.target.value);
	};

	return (
		<div className={styles.container}>
			<Head>
				<title>Pokemon</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<VStack m="2rem 0 4rem">
				<Text fontSize="3xl" fontWeight="bold">
					List of Pokemons
				</Text>
				<Input
					placeholder="Filter Pokemon"
					variant="flushed"
					size="md"
					w="50%"
					value={filter}
					onChange={handleFilter}
				/>
			</VStack>
			<div className={styles.gridContainer}>
				{/* {isLoading && <p>Loading...</p>}
				{isError && <p>An Error Occurred</p>} */}
				{data &&
					data
						.filter((pokemon) =>
							pokemon.name.toLowerCase().includes(filter.toLowerCase())
						)
						.map((pokemon) => (
							<div key={pokemon.id} className={styles.pokemon}>
								<Link href={`/pokemons/${pokemon.id}`}>
									<ChakraLink
										className={styles.pokemon}
										_hover={{ textDecoration: "none" }}
									>
										<Image
											key={`image${pokemon.id}`}
											src={pokemonBaseUrl + pokemon.image}
											width="200%"
											height="200%"
											objectFit="fill"
										/>
										<Text fontWeight="bold" key={`name${pokemon.id}`}>
											{pokemon.name}
										</Text>
									</ChakraLink>
								</Link>
							</div>
						))}
			</div>
		</div>
	);
};

export const getStaticProps: GetStaticProps = async (context) => {
	const data = await getPokemon();

	return {
		props: { data: data },
		revalidate: 60,
	};
};

export default Home;
